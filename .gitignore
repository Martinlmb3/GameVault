# ===============================================
# GameVault Fullstack Project .gitignore
# ===============================================

# ===============================================
# GIT REPOSITORIES (prevent embedded repos)
# ===============================================

# Ignore .git folders in subprojects to prevent embedded repositories
GameVaultApi/.git/
GameVaultClient/.git/

# ===============================================
# CLIENT (Next.js/Node.js) - GameVaultClient
# ===============================================

# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.

# dependencies
GameVaultClient/node_modules/
GameVaultClient/.pnp
GameVaultClient/.pnp.*
GameVaultClient/.yarn/*
!GameVaultClient/.yarn/patches
!GameVaultClient/.yarn/plugins
!GameVaultClient/.yarn/releases
!GameVaultClient/.yarn/versions

# testing
GameVaultClient/coverage/

# next.js
GameVaultClient/.next/
GameVaultClient/out/

# production
GameVaultClient/build/

# misc
GameVaultClient/.DS_Store
GameVaultClient/*.pem

# debug
GameVaultClient/npm-debug.log*
GameVaultClient/yarn-debug.log*
GameVaultClient/yarn-error.log*
GameVaultClient/.pnpm-debug.log*

# env files (can opt-in for committing if needed)
GameVaultClient/.env*

# vercel
GameVaultClient/.vercel

# typescript
GameVaultClient/*.tsbuildinfo
GameVaultClient/next-env.d.ts

# ===============================================
# API (.NET/Visual Studio) - GameVaultApi
# ===============================================

## Ignore Visual Studio temporary files, build results, and
## files generated by popular Visual Studio add-ons.
##
## Get latest from https://github.com/github/gitignore/blob/master/VisualStudio.gitignore

# GitHub workflows and actions
GameVaultApi/.github/

# User-specific files
GameVaultApi/*.rsuser
GameVaultApi/*.suo
GameVaultApi/*.user
GameVaultApi/*.userosscache
GameVaultApi/*.sln.docstates

# User-specific files (MonoDevelop/Xamarin Studio)
GameVaultApi/*.userprefs

# Mono auto generated files
GameVaultApi/mono_crash.*

# Build results
GameVaultApi/[Dd]ebug/
GameVaultApi/[Dd]ebugPublic/
GameVaultApi/[Rr]elease/
GameVaultApi/[Rr]eleases/
GameVaultApi/x64/
GameVaultApi/x86/
GameVaultApi/[Ww][Ii][Nn]32/
GameVaultApi/[Aa][Rr][Mm]/
GameVaultApi/[Aa][Rr][Mm]64/
GameVaultApi/bld/
GameVaultApi/[Bb]in/
GameVaultApi/[Oo]bj/
GameVaultApi/[Oo]ut/
GameVaultApi/[Ll]og/
GameVaultApi/[Ll]ogs/

# Visual Studio 2015/2017 cache/options directory
GameVaultApi/.vs/
# Uncomment if you have tasks that create the project's static files in wwwroot
#GameVaultApi/wwwroot/

# Visual Studio 2017 auto generated files
GameVaultApi/Generated\ Files/

# MSTest test Results
GameVaultApi/[Tt]est[Rr]esult*/
GameVaultApi/[Bb]uild[Ll]og.*

# NUnit
GameVaultApi/*.VisualState.xml
GameVaultApi/TestResult.xml
GameVaultApi/nunit-*.xml

# Build Results of an ATL Project
GameVaultApi/[Dd]ebugPS/
GameVaultApi/[Rr]eleasePS/
GameVaultApi/dlldata.c

# Benchmark Results
GameVaultApi/BenchmarkDotNet.Artifacts/

# .NET Core
GameVaultApi/project.lock.json
GameVaultApi/project.fragment.lock.json
GameVaultApi/artifacts/

# ASP.NET Scaffolding
GameVaultApi/ScaffoldingReadMe.txt

# StyleCop
GameVaultApi/StyleCopReport.xml

# Files built by Visual Studio
GameVaultApi/*_i.c
GameVaultApi/*_p.c
GameVaultApi/*_h.h
GameVaultApi/*.ilk
GameVaultApi/*.meta
GameVaultApi/*.obj
GameVaultApi/*.iobj
GameVaultApi/*.pch
GameVaultApi/*.pdb
GameVaultApi/*.ipdb
GameVaultApi/*.pgc
GameVaultApi/*.pgd
GameVaultApi/*.rsp
GameVaultApi/*.sbr
GameVaultApi/*.tlb
GameVaultApi/*.tli
GameVaultApi/*.tlh
GameVaultApi/*.tmp
GameVaultApi/*.tmp_proj
GameVaultApi/*_wpftmp.csproj
GameVaultApi/*.log
GameVaultApi/*.vspscc
GameVaultApi/*.vssscc
GameVaultApi/.builds
GameVaultApi/*.pidb
GameVaultApi/*.svclog
GameVaultApi/*.scc

# Chutzpah Test files
GameVaultApi/_Chutzpah*

# Visual C++ cache files
GameVaultApi/ipch/
GameVaultApi/*.aps
GameVaultApi/*.ncb
GameVaultApi/*.opendb
GameVaultApi/*.opensdf
GameVaultApi/*.sdf
GameVaultApi/*.cachefile
GameVaultApi/*.VC.db
GameVaultApi/*.VC.VC.opendb

# Visual Studio profiler
GameVaultApi/*.psess
GameVaultApi/*.vsp
GameVaultApi/*.vspx
GameVaultApi/*.sap

# Visual Studio Trace Files
GameVaultApi/*.e2e

# TFS 2012 Local Workspace
GameVaultApi/$tf/

# Guidance Automation Toolkit
GameVaultApi/*.gpState

# ReSharper is a .NET coding add-in
GameVaultApi/_ReSharper*/
GameVaultApi/*.[Rr]e[Ss]harper
GameVaultApi/*.DotSettings.user

# TeamCity is a build add-in
GameVaultApi/_TeamCity*

# DotCover is a Code Coverage Tool
GameVaultApi/*.dotCover

# AxoCover is a Code Coverage Tool
GameVaultApi/.axoCover/*
!GameVaultApi/.axoCover/settings.json

# Coverlet is a free, cross platform Code Coverage Tool
GameVaultApi/coverage*.json
GameVaultApi/coverage*.xml
GameVaultApi/coverage*.info

# Visual Studio code coverage results
GameVaultApi/*.coverage
GameVaultApi/*.coveragexml

# NCrunch
GameVaultApi/_NCrunch_*
GameVaultApi/.*crunch*.local.xml
GameVaultApi/nCrunchTemp_*

# MightyMoose
GameVaultApi/*.mm.*
GameVaultApi/AutoTest.Net/

# Web workbench (sass)
GameVaultApi/.sass-cache/

# Installshield output folder
GameVaultApi/[Ee]xpress/

# DocProject is a documentation generator add-in
GameVaultApi/DocProject/buildhelp/
GameVaultApi/DocProject/Help/*.HxT
GameVaultApi/DocProject/Help/*.HxC
GameVaultApi/DocProject/Help/*.hhc
GameVaultApi/DocProject/Help/*.hhk
GameVaultApi/DocProject/Help/*.hhp
GameVaultApi/DocProject/Help/Html2
GameVaultApi/DocProject/Help/html

# Click-Once directory
GameVaultApi/publish/

# Publish Web Output
GameVaultApi/*.[Pp]ublish.xml
GameVaultApi/*.azurePubxml
# Note: Comment the next line if you want to checkin your web deploy settings,
# but database connection strings (with potential passwords) will be unencrypted
GameVaultApi/*.pubxml
GameVaultApi/*.publishproj

# Microsoft Azure Web App publish settings. Comment the next line if you want to
# checkin your Azure Web App publish settings, but sensitive information contained
# in these scripts will be unencrypted
GameVaultApi/PublishScripts/

# NuGet Packages
GameVaultApi/*.nupkg
# NuGet Symbol Packages
GameVaultApi/*.snupkg
# The packages folder can be ignored because of Package Restore
GameVaultApi/**/[Pp]ackages/*
# except build/, which is used as an MSBuild target.
!GameVaultApi/**/[Pp]ackages/build/
# Uncomment if necessary however generally it will be regenerated when needed
#!GameVaultApi/**/[Pp]ackages/repositories.config
# NuGet v3's project.json files produces more ignorable files
GameVaultApi/*.nuget.props
GameVaultApi/*.nuget.targets

# Microsoft Azure Build Output
GameVaultApi/csx/
GameVaultApi/*.build.csdef

# Microsoft Azure Emulator
GameVaultApi/ecf/
GameVaultApi/rcf/

# Windows Store app package directories and files
GameVaultApi/AppPackages/
GameVaultApi/BundleArtifacts/
GameVaultApi/Package.StoreAssociation.xml
GameVaultApi/_pkginfo.txt
GameVaultApi/*.appx
GameVaultApi/*.appxbundle
GameVaultApi/*.appxupload

# Visual Studio cache files
# files ending in .cache can be ignored
GameVaultApi/*.[Cc]ache
# but keep track of directories ending in .cache
!GameVaultApi/?*.[Cc]ache/

# Others
GameVaultApi/ClientBin/
GameVaultApi/~$*
GameVaultApi/*~
GameVaultApi/*.dbmdl
GameVaultApi/*.dbproj.schemaview
GameVaultApi/*.jfm
GameVaultApi/*.pfx
GameVaultApi/*.publishsettings
GameVaultApi/orleans.codegen.cs

# Including strong name files can present a security risk
# (https://github.com/github/gitignore/pull/2483#issue-259490424)
#GameVaultApi/*.snk

# Since there are multiple workflows, uncomment next line to ignore bower_components
# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)
#GameVaultApi/bower_components/

# RIA/Silverlight projects
GameVaultApi/Generated_Code/

# Backup & report files from converting an old project file
# to a newer Visual Studio version. Backup files are not needed,
# because we have git ;-)
GameVaultApi/_UpgradeReport_Files/
GameVaultApi/Backup*/
GameVaultApi/UpgradeLog*.XML
GameVaultApi/UpgradeLog*.htm
GameVaultApi/ServiceFabricBackup/
GameVaultApi/*.rptproj.bak

# SQL Server files
GameVaultApi/*.mdf
GameVaultApi/*.ldf
GameVaultApi/*.ndf

# Business Intelligence projects
GameVaultApi/*.rdl.data
GameVaultApi/*.bim.layout
GameVaultApi/*.bim_*.settings
GameVaultApi/*.rptproj.rsuser
GameVaultApi/*- [Bb]ackup.rdl
GameVaultApi/*- [Bb]ackup ([0-9]).rdl
GameVaultApi/*- [Bb]ackup ([0-9][0-9]).rdl

# Microsoft Fakes
GameVaultApi/FakesAssemblies/

# GhostDoc plugin setting file
GameVaultApi/*.GhostDoc.xml

# Node.js Tools for Visual Studio
GameVaultApi/.ntvs_analysis.dat

# Visual Studio 6 build log
GameVaultApi/*.plg

# Visual Studio 6 workspace options file
GameVaultApi/*.opt

# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)
GameVaultApi/*.vbw

# Visual Studio LightSwitch build output
GameVaultApi/**/*.HTMLClient/GeneratedArtifacts
GameVaultApi/**/*.DesktopClient/GeneratedArtifacts
GameVaultApi/**/*.DesktopClient/ModelManifest.xml
GameVaultApi/**/*.Server/GeneratedArtifacts
GameVaultApi/**/*.Server/ModelManifest.xml
GameVaultApi/_Pvt_Extensions

# Paket dependency manager
GameVaultApi/.paket/paket.exe
GameVaultApi/paket-files/

# FAKE - F# Make
GameVaultApi/.fake/

# CodeRush personal settings
GameVaultApi/.cr/personal

# Python Tools for Visual Studio (PTVS)
GameVaultApi/__pycache__/
GameVaultApi/*.pyc

# Cake - Uncomment if you are using it
# GameVaultApi/tools/**
# !GameVaultApi/tools/packages.config

# Tabs Studio
GameVaultApi/*.tss

# Telerik's JustMock configuration file
GameVaultApi/*.jmconfig

# BizTalk build output
GameVaultApi/*.btp.cs
GameVaultApi/*.btm.cs
GameVaultApi/*.odx.cs
GameVaultApi/*.xsd.cs

# OpenCover UI analysis results
GameVaultApi/OpenCover/

# Azure Stream Analytics local run output
GameVaultApi/ASALocalRun/

# MSBuild Binary and Structured Log
GameVaultApi/*.binlog

# NVidia Nsight GPU debugger configuration file
GameVaultApi/*.nvuser

# MFractors (Xamarin productivity tool) working folder
GameVaultApi/.mfractor/

# Local History for Visual Studio
GameVaultApi/.localhistory/

# BeatPulse healthcheck temp database
GameVaultApi/healthchecksdb

# Backup folder for Package Reference Convert tool in Visual Studio 2017
GameVaultApi/MigrationBackup/

# Ionide (cross platform F# VS Code tools) working folder
GameVaultApi/.ionide/

# Fody - auto-generated XML schema
GameVaultApi/FodyWeavers.xsd
#Claude Permissions
GameVaultApi/claude

# ===============================================
# GLOBAL PATTERNS (apply to both projects)
# ===============================================

# Global misc files
.DS_Store
*.pem
